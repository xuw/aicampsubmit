version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: aibootcamp-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: homework_system
      POSTGRES_USER: homework_user
      POSTGRES_PASSWORD: homework_secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U homework_user"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - aibootcamp-network

  # Monolithic Application (Frontend + Backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: aibootcamp-submit:latest
    container_name: aibootcamp-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Node Environment
      NODE_ENV: production
      PORT: 3001

      # Database Configuration
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: homework_user
      DB_NAME: homework_system
      DB_PASSWORD: homework_secure_password_123
      DATABASE_URL: postgresql://homework_user:homework_secure_password_123@db:5432/homework_system

      # JWT Configuration
      JWT_SECRET: production_jwt_secret_key_minimum_32_chars_required_change_this
      JWT_EXPIRE: 24h

      # File Upload Configuration
      MAX_FILE_SIZE: 10485760
      UPLOAD_DIR: /app/backend/uploads

      # CORS Configuration
      CORS_ORIGIN: "*"

      # Database Migrations
      RUN_MIGRATIONS: "true"
    volumes:
      - uploads_data:/app/backend/uploads
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aibootcamp-network

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  aibootcamp-network:
    driver: bridge
