version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aibootcamp-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: homework_system
      POSTGRES_USER: homework_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_me_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - homework-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U homework_user -d homework_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aibootcamp-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      DATABASE_URL: postgresql://homework_user:${DB_PASSWORD:-change_me_in_production}@postgres:5432/homework_system
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here_minimum_32_characters}
      JWT_EXPIRE: 24h
      MAX_FILE_SIZE: 10485760
      UPLOAD_DIR: /app/uploads
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
    volumes:
      - upload_data:/app/uploads
    ports:
      - "5000:5000"
    networks:
      - homework-network
    depends_on:
      postgres:
        condition: service_healthy

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aibootcamp-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - homework-network
    depends_on:
      - backend
    environment:
      - VITE_API_URL=${API_URL:-http://localhost:5000/api}

volumes:
  postgres_data:
    driver: local
  upload_data:
    driver: local

networks:
  homework-network:
    driver: bridge
